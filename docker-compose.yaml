services:
  frontend:
    container_name: iotdevices.frontend
    build:
      context: frontend
      dockerfile: Dockerfile.${NODE_ENV}
    env_file:
      - .env.${NODE_ENV}
    ports:
      - ${CLIENT_PORT}:4200
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - angular-net

  backend:
    container_name: iotdevices.backend
    build:
      context: backend
      dockerfile: Dockerfile.${NODE_ENV}
    env_file:
      - .env.${NODE_ENV}
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - ${API_PORT}:3000
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules

  postgres:
    image: postgres:16.4-alpine
    container_name: iotdevices.postgres
    env_file:
      - .env.${NODE_ENV}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  pgadmin:
    container_name: iotdevices.pgadmin
    image: dpage/pgadmin4
    env_file:
      - .env.${NODE_ENV}
    ports:
      - ${PGADMIN_DEFAULT_PORT}:80
    depends_on:
      - postgres

  redis:
    image: redis:latest
    container_name: iotdevices.redis
    env_file:
      - .env.${NODE_ENV}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./data/redis:/data

networks:
  angular-net:
    driver: bridge